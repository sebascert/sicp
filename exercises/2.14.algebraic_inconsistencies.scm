(load "packages/interval_arithmetic.scm")
(define (inspect-interval i)
 (print-interval i)
 (print-center-percentage i)
 (print-line " i/i int")
 (print-interval (div-interval i i))
 (print-line " i/i cp")
 (print-center-percentage (div-interval i i))
 (newline))

(define (par1 r1 r2)
 (div-interval (mul-interval r1 r2) (add-interval r1 r2)))

(define (par2 r1 r2)
 (let ((one (make-interval 1 1)))
  (div-interval one (add-interval (div-interval one r1) (div-interval one r2)))))

(define (print-center-percentage cp)
 (display "center ")
 (print-line (center cp))
 (display "percentage ")
 (print-line (percentage cp)))

(define (print-interval i)
 (display "lower ")
 (print-line (lower-bound i))
 (display "upper ")
 (print-line (upper-bound i)))

; from Lem E Tweakit
(print-interval (par1 (make-interval 2 3) (make-interval 4 5)))
(print-interval (par2 (make-interval 2 3) (make-interval 4 5)))
(print-center-percentage (par1 (make-interval 2 3) (make-interval 4 5)))
(print-center-percentage (par2 (make-interval 2 3) (make-interval 4 5)))
(newline)
(define a (make-interval 50 55.0))
(define b (make-interval 99.0 101.0))
(inspect-interval a)
(inspect-interval b)
(print-interval (div-interval a b))
(print-center-percentage (div-interval a b))
; see 2.15 for explanation
